#!/bin/bash
#
#  Configurar servicios netboot de max-server
#
#
#  Copyright Mario Izquierdo mariodebian#gmail.com
#  Para la Consejería de Educación de la Comunidad de Madrid
#  
#  Licencia: GPL2
#
#


search_file() {
 SPATH=$1
 SPATTERN=$2
 SFILE=$(find $SPATH -name "$SPATTERN" | tail -1) # get last version
 [ "$SFILE" = "" ] && return 1
 [ ! -e "$SFILE" ] && return 1
 SNAME=$(basename $SFILE)
 echo $SNAME
}


if file /sbin/mkfs | grep -q "ELF 64-bit"; then
  ARCH="amd64"
elif file /sbin/mkfs | grep -q "ELF 32-bit"; then
  ARCH="i386"
else
  ARCH="unknow"
fi



#
# Configurar TCOS
#

if [ "$ARCH" = "i386" ] && [ -f /etc/tcos/tcos.conf ]; then
  . /etc/tcos/tcos.conf
  if [ ! -e /boot/vmlinuz-${TCOS_KERNEL} ]; then
    # update kernel
    NEW_KERNEL=$(ls -1t /boot/vmlinuz*generic | head -1 | awk -F "vmlinuz-" '{print $2}')
    sed -i -e s/"${TCOS_KERNEL}"/"${NEW_KERNEL}"/g /etc/tcos/tcos.conf
    . /etc/tcos/tcos.conf
  fi
  echo " * Configurando NET-menu TCOS ... "
   sed -e "s/__TCOS_KERNEL__/${TCOS_KERNEL}/g" \
    /var/lib/max-netboot/pxelinux.cfg/tcos.menu.tpl > /var/lib/max-netboot/pxelinux.cfg/tcos.menu


  # configurar XFS
  if [ -f /etc/X11/fs/config ] && [ "$(grep -c "^no-listen" /etc/X11/fs/config 2>/dev/null)" != "0" ]; then
    sed -i 's/no-listen/#no-listen/g' /etc/X11/fs/config
    sed -i 's/client-limit = 10/client-limit = 30/g' /etc/X11/fs/config
    invoke-rc.d xfs restart
  fi

  if [ -f /etc/default/xfstt ] && [ "$(grep -c 'LISTEN_TCP=\"no\"' /etc/default/xfstt)" = "1" ]; then
    sed 's/LISTEN_TCP="no"/LISTEN_TCP="yes"/g' /etc/default/xfstt
    invoke-rc.d xfstt restart
  fi


  # generar imagenes de arranque
  if [ -x /usr/sbin/gentcos ]; then
    gentcos -tftp
  fi
fi

if [ "$ARCH" = "amd64" ]; then
    echo "   *  Detectado arquitectura AMD64"
    # generamos la plantilla de menu si existe
    if [ -f /var/lib/tcos/chroot/tcos-buildchroot.conf ]; then

      . /var/lib/tcos/chroot/tcos-buildchroot.conf
      # gentcos -parse-pxelinuxcfg
      echo "   * Configurando NET-menu TCOS ... "
      sed -e "s/__TCOS_KERNEL__/${TCOS_KERNEL}/g" \
          /var/lib/max-netboot/pxelinux.cfg/tcos.menu.tpl > /var/lib/max-netboot/pxelinux.cfg/tcos.menu

    else
      echo "   * ERROR: debe generar las imágenes de TCOS con TcosConfig"
    fi
fi



#
# Configurar Backharddi
#

if [ -d /usr/share/backharddi-ng ]; then
  # buscar kernel
  BK_KERNEL=$(search_file /boot/ "linux*backharddi*")
  BK_INITRD=$(search_file /boot/ "minirt*backharddi*")
  if [ "$BK_KERNEL" != "" ] && [ "$BK_INITRD" != "" ]; then
    echo " * Configurando NET-menu Backharddi ... "
    sed -e "s/__BK_KERNEL__/${BK_KERNEL}/g" \
        -e "s/__BK_INITRD__/${BK_INITRD}/" \
           /var/lib/max-netboot/pxelinux.cfg/backharddi.menu.tpl > /var/lib/max-netboot/pxelinux.cfg/backharddi.menu
  else
    echo " ***** No encontrado kernel Backharddi ***** "
  fi
fi




#
# Actualizar dpsyco
#

if [ -x /usr/sbin/update-dpsyco-skel ]; then
  echo "  ** Actualizando plantilla dpsyco **"
  /usr/sbin/update-dpsyco-skel >/dev/null 2>&1

  if [ -x /usr/sbin/atftpd ]; then
    # ATFTPD esta configurado como demonio no desde inetd
    update-inetd --disable tftp  >/dev/null 2>&1
    invoke-rc.d atftpd restart
  fi

  # force stop dropbear
  invoke-rc.d dropbear stop >/dev/null 2>&1 || true

  if ! grep -q MaX /etc/default/dropbear; then
    echo "" >> /etc/default/dropbear
    echo "# added by MaX update-netboot-server" >> /etc/default/dropbear
    echo "NO_START=1" >> /etc/default/dropbear
  fi
fi

