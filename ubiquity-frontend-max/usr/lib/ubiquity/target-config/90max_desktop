#!/bin/bash
#set -e

if [ -e /tmp/sendinfo ]; then
  # save in chroot to send MAX statistics
  mkdir -p /target/var/lib/max-sendinfo/
  touch /target/var/lib/max-sendinfo/pending
  rm -f /tmp/sendinfo
  MINUTE=$((RANDOM%59))
  cat << EOF > /target/etc/cron.d/max-sendinfo

# Try to send install info and hardware to MAX servers every hour in a random minute
$MINUTE *     * * *     root   [ -d /var/lib/max-sendinfo ] && [ -x /usr/sbin/max-sendinfo ] && /usr/sbin/max-sendinfo >> /var/lib/max-sendinfo/sendinfo.log 2>&1
EOF
fi


if [ -e /tmp/max_desktop_type ]; then
  # gnome or xfce
  # tune /etc/skel/.dmrc and users .dmrc
  if [ "$(cat /tmp/max_desktop_type)" = "xfce" ]; then
    echo " * Setting XFCE desktop by default" >&2
    # chroot /target /usr/lib/lightdm/lightdm-set-defaults -s xfce
cat << EOF > /target/usr/share/lightdm/lightdm.conf.d/95-max-xfce.conf
[SeatDefaults]
user-session=xfce
EOF
    # set AccountsService
    test -d /target/var/lib/AccountsService/users/ || mkdir -p /target/var/lib/AccountsService/users/
    cat << EOF > /target/var/lib/AccountsService/users/madrid

[User]
XSession=xfce
XKeyboardLayouts=
EOF
  cat /target/var/lib/AccountsService/users/madrid > /target/var/lib/AccountsService/users/alumno
  cat /target/var/lib/AccountsService/users/madrid > /target/var/lib/AccountsService/users/profesor
  fi
fi

ARGS="i915.modeset=0 acpi_osi=Linux acpi_backlight=vendor"

# IBM hack, trac #417
if grep -q "$ARGS" /proc/cmdline; then
  echo " * Setting IBM hacks in GRUB" >&2
  if ! grep -q "$ARGS" /target/etc/default/grub 2>/dev/null; then
    . /target/etc/default/grub
    echo "# this will fix IBM issues in MAX" >> /target/etc/default/grub
    echo "GRUB_CMDLINE_LINUX=\"$GRUB_CMDLINE_LINUX $ARGS \"" >> /target/etc/default/grub
    #chroot /target update-grub
  fi
fi

# chroot /target /usr/lib/lightdm/lightdm-set-defaults --allow-guest=false
chroot /target loadkeys es
chroot /target setupcon --save-only


# enable repo (ubiquity plugininstall.py set to 127.0.0.1
sed -i -e '/ubuntu.com/d' -e '/max.educa.madrid.org/d' /target/etc/hosts


if [ ! -d /sys/firmware/efi/efivars ]; then
  echo " *  NO UEFI found /sys/firmware/efi/efivars "
  exit 0
fi


EFI_PART=$(awk '/boot\/efi/ {print $1}' /proc/mounts| tail -1)

if [ -x $EFI_PART ]; then
  echo " * NO UEFI partition"
  exit 0
fi

# remount (Ubiquity don't mount efi dir)
umount $EFI_PART > /dev/null 2>&1 || true
mkdir -p /target/boot/efi
mount $EFI_PART /target/boot/efi

exit 0
