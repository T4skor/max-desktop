
# install syslinux-themes-${SYSLINUX_THEME_VERSION} in chroot and copy to $CDRW/isolinux
chroot $CHROOT << EOC || _exit "Error instalando syslinux-themes-${SYSLINUX_THEME_VERSION}"
export LC_ALL=C
export LC_MESSAGES=C
export DEBCONF_FRONTEND="noninteractive"
export DEBIAN_FRONTEND="noninteractive"
export UCF_FORCE_CONFFOLD=1
export ERROR=0
apt-get $APT_OPTS update || ERROR=1
apt-get $APT_OPTS -f install
apt-get $APT_OPTS install syslinux-themes-${SYSLINUX_THEME_VERSION} gfxboot-theme-ubuntu || ERROR=1
apt-get clean
exit \$ERROR
EOC

#set -x
rm -f $CDRW/isolinux/*
cp -L --remove-destination $CHROOT/usr/share/syslinux/themes/${SYSLINUX_THEME_VERSION}/isolinux-live/* $CDRW/isolinux/

mkdir -p $CDRW/gfxboot
tar -zxf $CHROOT/usr/share/gfxboot-theme-ubuntu/bootlogo.tar.gz -C $CDRW/gfxboot
cp $CDRW/gfxboot/bootlogo $CDRW/gfxboot/es.tr $CDRW/gfxboot/16x16.fnt $CDRW/isolinux/
rm -rf $CDRW/gfxboot

# repack bootlogo like live-build
#ls -lh $CDRW/isolinux/bootlogo
tmpdir="$(mktemp -d)"
(cd "$tmpdir" && cpio -i) < $CDRW/isolinux/bootlogo
cp -a -f        $CDRW/isolinux/*.fnt \
                $CDRW/isolinux/*.hlp \
                $CDRW/isolinux/*.jpg \
                $CDRW/isolinux/*.pcx \
                $CDRW/isolinux/*.tr \
                $CDRW/isolinux/*.cfg \
                $(test -e $CDRW/isolinux/lang && echo $CDRW/isolinux/lang) \
                $CDRW/isolinux/langlist \
                "$tmpdir/" || true
(cd "$tmpdir" && ls -1 | cpio --quiet -o) > $CDRW/isolinux/bootlogo
rm -rf "$tmpdir"
#ls -lh $CDRW/isolinux/bootlogo
sed -i -e 's/initrd.lz/initrd.gz/g' $CDRW/isolinux/txt.cfg
#set +x

mkdir -p $CDRW/preseed $CDRW/.disk

_echo "Copiando preseed"
rm -f $CDRW/preseed/*
cp $GENLIVE/preseed/* $CDRW/preseed/ || _exit "No se puede sobreescribir preseed"

printf "%s - $ARCH (%s)" "$TITLE" "$created" > $CDRW/.disk/info
printf "http://www.educa2.madrid.org/web/max" > $CDRW/.disk/release_notes_url
printf "dvd/single" > $CDRW/.disk/cd_type
if [ -n "$ENABLE_EXTRA" ]; then
  touch $CDRW/.disk/base_installable 
else
  rm -f $CDRW/.disk/base_installable
fi

zcat $CDRW/casper/initrd.gz | cpio --quiet -id conf/uuid.conf
cat conf/uuid.conf 2>/dev/null > $CDRW/.disk/casper-uuid-generic
rm -rf conf/

cat << EOF > $CDRW/README.diskdefines
#define DISKNAME  $TITLE - Build $ARCH $created
#define TYPE  binary
#define TYPEbinary  1
#define ARCH  $ARCH
#define ARCH$ARCH  1
#define DISKNUM  1
#define DISKNUM1  1
#define TOTALNUM  0
#define TOTALNUM0  1
EOF

#_echo "Borrando wuby (instalador para windows)"
#rm -rf $CDRW/*exe
#rm -rf $CDRW/*inf
#rm -rf $CDRW/pics/

# a単adir software portable del paquete max-win32-apps
if [ -d $GENLIVE/win32aps ]; then
  _echo "Copiando max-win32-apps ..."
  cp -ra $GENLIVE/win32aps/* $CDRW/
fi


if [ "$ARCH" = "amd64" ]; then
  cp -ra /usr/share/max-genlive/EFI     $CDRW/
  cp -ra /usr/share/max-genlive/boot    $CDRW/
fi

# copiar memtest
cp /boot/memtest86+.bin $CDRW/casper/mt86plus

_echo "Generando md5sum de archivos de dentro de la ISO..."
#(cd $CDRW && find . -type f -print0 | grep -v boot.cat | grep -v isolinux.bin | xargs -0 md5sum > md5sum.txt)
(cd $CDRW && find . -type f -print0 | xargs -0 md5sum > md5sum.txt)

# delete boot.cat and isolinux.bin
(cd $CDRW && grep -v -e "boot.cat" -e "isolinux.bin" md5sum.txt > md5sum.txt.new)
(cd $CDRW && mv md5sum.txt.new md5sum.txt)

# delete md5sum.txt line #1040
sed -i '/md5sum.txt/d' $CDRW/md5sum.txt

#(cd debian/python-exe >/dev/null ; find . -type f  ! -regex '.*/DEBIAN/.*' -printf '%P\0' | xargs -r0 md5sum > DEBIAN/md5sums)


ISO_FILE="${IMAGE_NAME}-live-$ARCH-${stamp}.iso"

_echo "Generando ${ISO_FILE}"

# montar chroot 
umount $CHROOT/mnt 2>/dev/null || true
mount -o bind $CHROOT/../ $CHROOT/mnt

#debian-live
#genisoimage -J -l -cache-inodes -allow-multidot -A "MAX 9.0"
#    -p "MAX developers on 2016-11-20_20:18:35" -publisher "MAdrid_linuX"
#    -V "MAX 9.0"
#    -no-emul-boot -boot-load-size 4 -boot-info-table -r -b isolinux/isolinux.bin -c isolinux/boot.cat -o binary.hybrid.iso binary
#isohybrid  binary.hybrid.iso



if [ "$ARCH" = "amd64" ]; then

#  chroot $CHROOT genisoimage -U -A "$TITLE (${ARCH})" -V "$TITLE (${ARCH})" \
#     -J -joliet-long -r -v -T -cache-inodes -l -b isolinux/isolinux.bin \
#     -volset "$TITLE (${ARCH})" \
#     -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 \
#     -boot-info-table -o /mnt/${ISO_FILE} \
#     -eltorito-alt-boot -e boot/grub/efi.img -no-emul-boot \
#     /mnt/cdimage.${ARCH}/ || _exit "Error generando la imagen ISO"
#
#
#     _echo " Generando isohybrid ... "
#     chroot $CHROOT isohybrid -u /mnt/${ISO_FILE}

  chroot $CHROOT xorriso \
           -as mkisofs \
           -volid "${MAX_VOLID}_${ARCH}" \
           -appid "$TITLE ${ARCH}" \
           -o /mnt/${ISO_FILE} \
           -rock -omit-version-number -disable-deep-relocation -joliet \
           -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin \
           -c isolinux/boot.cat \
           -b isolinux/isolinux.bin \
#	   Se a単ade -iso-level 3 para agrandar el peso del squash
	   -iso-level 3 \
           -no-emul-boot -boot-load-size 4 -boot-info-table \
           -eltorito-alt-boot \
           -e boot/grub/efi.img \
           -no-emul-boot \
           -isohybrid-gpt-basdat \
           -isohybrid-apm-hfsplus \
           /mnt/cdimage.${ARCH} || _exit "Error generando la imagen ISO"

else
# se a単ade opcion para el peso de la usb -allow-limited-size -udf   
  chroot $CHROOT genisoimage -r -V "$TITLE (${ARCH})" -cache-inodes -J -l -b isolinux/isolinux.bin \
     -c isolinux/boot.cat -no-emul-boot -boot-load-size 4  --allow-limited-size -udf \
     -boot-info-table -o /mnt/${ISO_FILE} /mnt/cdimage.${ARCH}/ || _exit "Error generando la imagen ISO"

     _echo " Generando isohybrid ... "
     chroot $CHROOT isohybrid /mnt/${ISO_FILE}
fi


umount $CHROOT/mnt

_echo "Tama単o Archivo ISO: `du -h ${ISO_FILE}`"

MAX_DVD_SIZE=4707319808
SIZE_BYTES=$(stat -c %s ${ISO_FILE})

if [ ${SIZE_BYTES} -ge ${MAX_DVD_SIZE} ]; then
  _echo "ADVERTENCIA: No entra en un DVD (${SIZE_BYTES} > ${MAX_DVD_SIZE})"
else
  _echo "OK: Si entra en un DVD (${SIZE_BYTES} < ${MAX_DVD_SIZE})"
fi


#genisoimage -r -V "$TITLE" -cache-inodes -J -l -b isolinux/isolinux.bin \
#     -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 \
#     -boot-info-table -o ${ISO_FILE} $CDRW/ || _exit "Error generando la imagen ISO"

_echo "Generando md5 de la ISO"
md5sum ${ISO_FILE} > ${ISO_FILE}.md5 || _exit "Error generando el md5"
